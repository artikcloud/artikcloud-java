/*
 * ARTIK Cloud API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package cloud.artik.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * 
 */
@ApiModel(description = "")

public class ValidityPeriod {
  @SerializedName("notBefore")
  private Long notBefore = null;

  @SerializedName("notAfter")
  private Long notAfter = null;

  public ValidityPeriod notBefore(Long notBefore) {
    this.notBefore = notBefore;
    return this;
  }

   /**
   * Not before
   * @return notBefore
  **/
  @ApiModelProperty(example = "null", value = "Not before")
  public Long getNotBefore() {
    return notBefore;
  }

  public void setNotBefore(Long notBefore) {
    this.notBefore = notBefore;
  }

  public ValidityPeriod notAfter(Long notAfter) {
    this.notAfter = notAfter;
    return this;
  }

   /**
   * Not before
   * @return notAfter
  **/
  @ApiModelProperty(example = "null", value = "Not before")
  public Long getNotAfter() {
    return notAfter;
  }

  public void setNotAfter(Long notAfter) {
    this.notAfter = notAfter;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ValidityPeriod validityPeriod = (ValidityPeriod) o;
    return Objects.equals(this.notBefore, validityPeriod.notBefore) &&
        Objects.equals(this.notAfter, validityPeriod.notAfter);
  }

  @Override
  public int hashCode() {
    return Objects.hash(notBefore, notAfter);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ValidityPeriod {\n");
    
    sb.append("    notBefore: ").append(toIndentedString(notBefore)).append("\n");
    sb.append("    notAfter: ").append(toIndentedString(notAfter)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

