/*
 * ARTIK Cloud API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package cloud.artik.api;

import cloud.artik.client.ApiException;
import cloud.artik.model.DeviceTypeEnvelope;
import cloud.artik.model.DeviceTypesEnvelope;
import cloud.artik.model.ManifestPropertiesEnvelope;
import cloud.artik.model.ManifestVersionsEnvelope;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DeviceTypesApi
 */
@Ignore
public class DeviceTypesApiTest {

    private final DeviceTypesApi api = new DeviceTypesApi();

    
    /**
     * Get Available Manifest Versions
     *
     * Get a Device Type&#39;s available manifest versions
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAvailableManifestVersionsTest() throws ApiException {
        String deviceTypeId = null;
        ManifestVersionsEnvelope response = api.getAvailableManifestVersions(deviceTypeId);

        // TODO: test validations
    }
    
    /**
     * Get Device Type
     *
     * Retrieves a Device Type
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getDeviceTypeTest() throws ApiException {
        String deviceTypeId = null;
        DeviceTypeEnvelope response = api.getDeviceType(deviceTypeId);

        // TODO: test validations
    }
    
    /**
     * Get Device Types
     *
     * Retrieves Device Types
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getDeviceTypesTest() throws ApiException {
        String name = null;
        Integer offset = null;
        Integer count = null;
        String tags = null;
        DeviceTypesEnvelope response = api.getDeviceTypes(name, offset, count, tags);

        // TODO: test validations
    }
    
    /**
     * Get Device Types by Application
     *
     * Get Device Types by Application
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getDeviceTypesByApplicationTest() throws ApiException {
        String appId = null;
        Boolean productInfo = null;
        Integer count = null;
        Integer offset = null;
        DeviceTypesEnvelope response = api.getDeviceTypesByApplication(appId, productInfo, count, offset);

        // TODO: test validations
    }
    
    /**
     * Get Latest Manifest Properties
     *
     * Get a Device Type&#39;s manifest properties for the latest version.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getLatestManifestPropertiesTest() throws ApiException {
        String deviceTypeId = null;
        ManifestPropertiesEnvelope response = api.getLatestManifestProperties(deviceTypeId);

        // TODO: test validations
    }
    
    /**
     * Get manifest properties
     *
     * Get a Device Type&#39;s manifest properties for a specific version.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getManifestPropertiesTest() throws ApiException {
        String deviceTypeId = null;
        String version = null;
        ManifestPropertiesEnvelope response = api.getManifestProperties(deviceTypeId, version);

        // TODO: test validations
    }
    
}
