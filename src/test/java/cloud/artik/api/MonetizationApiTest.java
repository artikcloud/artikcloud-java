/*
 * ARTIK Cloud API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package cloud.artik.api;

import cloud.artik.client.ApiException;
import cloud.artik.model.DevicePricingTierEnvelope;
import cloud.artik.model.DevicePricingTierRequest;
import cloud.artik.model.DevicePricingTiersEnvelope;
import cloud.artik.model.DeviceTypePricingTier;
import cloud.artik.model.DeviceTypePricingTiersEnvelope;
import cloud.artik.model.UpgradePathEnvelope;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for MonetizationApi
 */
@Ignore
public class MonetizationApiTest {

    private final MonetizationApi api = new MonetizationApi();

    
    /**
     * Define devicetype&#39;s pricing tiers.
     *
     * Define devicetype&#39;s pricing tiers.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createPricingTiersTest() throws ApiException {
        String dtid = null;
        DeviceTypePricingTier pricingTierInfo = null;
        DeviceTypePricingTier response = api.createPricingTiers(dtid, pricingTierInfo);

        // TODO: test validations
    }
    
    /**
     * Get a device&#39;s pricing tiers
     *
     * Get a device&#39;s pricing tiers
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getPricingTiersTest() throws ApiException {
        String did = null;
        Boolean active = null;
        DevicePricingTiersEnvelope response = api.getPricingTiers(did, active);

        // TODO: test validations
    }
    
    /**
     * Get devicetype&#39;s pricing tiers.
     *
     * Get devicetype&#39;s pricing tiers.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getThePricingTiersTest() throws ApiException {
        String dtid = null;
        Integer version = null;
        DeviceTypePricingTiersEnvelope response = api.getThePricingTiers(dtid, version);

        // TODO: test validations
    }
    
    /**
     * Get upgrade path
     *
     * Get upgrade path
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getUpgradePathTest() throws ApiException {
        String did = null;
        String action = null;
        UpgradePathEnvelope response = api.getUpgradePath(did, action);

        // TODO: test validations
    }
    
    /**
     * Set a device&#39;s pricing tier
     *
     * Set a device&#39;s pricing tier
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void setPricingTierTest() throws ApiException {
        String did = null;
        DevicePricingTierRequest pricingTier = null;
        DevicePricingTierEnvelope response = api.setPricingTier(did, pricingTier);

        // TODO: test validations
    }
    
}
